# -*- coding: utf-8 -*-
import json
import scrapy
from urllib.parse import urljoin
import subprocess

FILE_STORE='/Users/emma/Desktop/CrawlMalware/malware/malware/data/package/'

class PackageSpider(scrapy.Spider):
    name = 'package'
    allowed_domains = ['packages.debian.org']
    start_urls = ['https://packages.debian.org/stable/allpackages']
    base_url = 'https://packages.debian.org/stable/'
    current_page = 1

    def parse(self, response):
        click_url = response.xpath('//*[@id="content"]/dl/dt/a/@href').extract()
        for url in click_url:
            url = urljoin(self.base_url, url)
            yield scrapy.Request(url, callback=self.parse_click)

    def parse_click(self, response):
        archs = response.xpath('//tr/th/a/@href').extract()
        for arch in archs:
            name = arch.split("/")[2]
            if name == "armel":
                meta = {
                    'dir': "armel",
                    'name': arch.split("/")[-2]
                }
                yield scrapy.Request('https://packages.debian.org'+ arch, meta=meta, callback=self.save)
            elif name == "i386":
                meta = {
                    'dir': "i386",
                    'name': arch.split("/")[-2]
                }
                yield scrapy.Request('https://packages.debian.org'+ arch, meta=meta, callback=self.save)
            
    def save(self, response):
        allurls = response.xpath('//*[@id="content"]/*/ul/li/a/@href').extract()
        try:
            download_url = allurls[0]
            print('wget.....', response.meta)
            p = subprocess.Popen(["wget", download_url, "-P", FILE_STORE+response.meta.get("dir")+'/', "--limit-rate", '50k'])
            p.wait() 
        except Exception as e:
            print(e)      
          

